{
  "_args": [
    [
      {
        "raw": "hapi-graphql@github:aya-experience/hapi-graphql",
        "scope": null,
        "escapedName": "hapi-graphql",
        "name": "hapi-graphql",
        "rawSpec": "github:aya-experience/hapi-graphql",
        "spec": "github:aya-experience/hapi-graphql",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:aya-experience/hapi-graphql.git",
          "sshUrl": "git+ssh://git@github.com/aya-experience/hapi-graphql.git",
          "httpsUrl": "git+https://github.com/aya-experience/hapi-graphql.git",
          "gitUrl": "git://github.com/aya-experience/hapi-graphql.git",
          "shortcut": "github:aya-experience/hapi-graphql",
          "directUrl": "https://raw.githubusercontent.com/aya-experience/hapi-graphql/master/package.json"
        }
      },
      "/home/chloe/Workspace/citation/citation-server"
    ]
  ],
  "_from": "aya-experience/hapi-graphql",
  "_id": "hapi-graphql@1.0.1",
  "_inCache": true,
  "_location": "/hapi-graphql",
  "_phantomChildren": {},
  "_requested": {
    "raw": "hapi-graphql@github:aya-experience/hapi-graphql",
    "scope": null,
    "escapedName": "hapi-graphql",
    "name": "hapi-graphql",
    "rawSpec": "github:aya-experience/hapi-graphql",
    "spec": "github:aya-experience/hapi-graphql",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:aya-experience/hapi-graphql.git",
      "sshUrl": "git+ssh://git@github.com/aya-experience/hapi-graphql.git",
      "httpsUrl": "git+https://github.com/aya-experience/hapi-graphql.git",
      "gitUrl": "git://github.com/aya-experience/hapi-graphql.git",
      "shortcut": "github:aya-experience/hapi-graphql",
      "directUrl": "https://raw.githubusercontent.com/aya-experience/hapi-graphql/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/aya-experience/hapi-graphql.git#541e99bf9084272b3d3e8c43b488d0307004f758",
  "_shasum": "0025e82b43cff2c668bec63e4c2c302b4a09998a",
  "_shrinkwrap": null,
  "_spec": "hapi-graphql@github:aya-experience/hapi-graphql",
  "_where": "/home/chloe/Workspace/citation/citation-server",
  "author": {
    "name": "Simon Degraeve",
    "email": "simon.degraeve@gmail.com"
  },
  "babel": {
    "presets": [
      "es2015",
      "stage-2"
    ],
    "plugins": [
      "add-module-exports",
      "transform-runtime"
    ]
  },
  "bugs": {
    "url": "https://github.com/aya-experience/hapi-graphql/issues"
  },
  "dependencies": {
    "accepts": "^1.3.3",
    "babel-runtime": "^6.9.2",
    "boom": "^3.2.2",
    "joi": "^8.4.2"
  },
  "description": "Create a GraphQL HTTP server with Hapi.",
  "devDependencies": {
    "babel-cli": "^6.10.1",
    "babel-eslint": "^6.1.0",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-runtime": "^6.9.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-stage-2": "^6.11.0",
    "babel-runtime": "^6.9.2",
    "eslint": "^3.0.1",
    "eslint-config-airbnb-base": "^4.0.0",
    "eslint-plugin-import": "^1.10.2",
    "graphql": "^0.7.2",
    "hapi": "^13.5.0"
  },
  "eslintConfig": {
    "parser": "babel-eslint",
    "extends": [
      "airbnb-base"
    ]
  },
  "gitHead": "541e99bf9084272b3d3e8c43b488d0307004f758",
  "homepage": "https://github.com/aya-experience/hapi-graphql#readme",
  "keywords": [
    "hapi",
    "graphql"
  ],
  "license": "MIT",
  "main": "./lib/index.js",
  "name": "hapi-graphql",
  "optionalDependencies": {},
  "peerDependencies": {
    "babel-runtime": "^6.9.2",
    "graphql": "^0.7.2"
  },
  "readme": "# GraphQL Hapi Plugin\n\nCreate a GraphQL HTTP server with [Hapi](http://hapijs.com).\nPort from [express-graphql](https://github.com/graphql/express-graphql).\n\n```js\nnpm install --save hapi-graphql\n```\n\n### Example\n\n```js\nimport Hapi from 'hapi';\nimport GraphQL from 'hapi-graphql';\nimport {GraphQLSchema} from 'graphql';\n\nconst server = new Hapi.Server();\nserver.connection({\n  port: 3000\n});\n\nconst TestSchema = new GraphQLSchema({});\n\nserver.register({\n  register: GraphQL,\n  options: {\n    query: {\n      # options, see below\n    },\n    // OR\n    //\n    // query: (request) => ({\n    //   # options, see below\n    // }),\n    route: {\n      path: '/graphql',\n      config: {}\n    }\n  }\n}, () =>\n  server.start(() =>\n    console.log('Server running at:', server.info.uri)\n  )\n);\n```\n\n### Options\n\nThe `options` key of `query` accepts the following:\n\n  * **`schema`**: A `GraphQLSchema` instance from [`graphql-js`][].\n    A `schema` *must* be provided.\n\n  * **`context`**: A value to pass as the `context` to the `graphql()`\n    function from [`graphql-js`][].\n\n  * **`rootValue`**: A value to pass as the `rootValue` to the `graphql()`\n    function from [`graphql-js`][].\n\n  * **`pretty`**: If `true`, any JSON response will be pretty-printed.\n\n  * **`formatError`**: An optional function which will be used to format any\n    errors produced by fulfilling a GraphQL operation. If no function is\n    provided, GraphQL's default spec-compliant [`formatError`][] function will\n    be used.\n\n  * **`validationRules`**: Optional additional validation rules queries must\n    satisfy in addition to those defined by the GraphQL spec.\n\n  * **`graphiql`**: If `true`, may present [GraphiQL][] when loaded directly\n    from a browser (a useful tool for debugging and exploration).\n\n#### Debugging\n\nDuring development, it's useful to get more information from errors, such as\nstack traces. Providing a function to `formatError` enables this:\n\n```js\nformatError: error => ({\n  message: error.message,\n  locations: error.locations,\n  stack: error.stack\n})\n```\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/aya-experience/hapi-graphql.git"
  },
  "scripts": {
    "prepublish": "rm -rf lib/* && babel src --out-dir lib",
    "test": "eslint src"
  },
  "version": "1.0.1"
}
